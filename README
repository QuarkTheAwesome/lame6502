***********************
*** Lame6502 README ***
***********************


***************
*** License ***
***************

lame6502 - a portable 6502 emulator

Copyright (c) 2005, Joey Loman, <joey@lamenes.org>
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:
 1. Redistributions of source code must retain the above copyright
    notice, this list of conditions and the following disclaimer.
 2. Redistributions in binary form must reproduce the above copyright
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
 3. Neither the name of the author nor the names of its contributors
    may be used to endorse or promote products derived from this software
    without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.


*************************
*** Released versions ***
*************************

-----------
26-12-2006:
-----------
Public version 0.1


***********************
*** Getting started ***
***********************

lame6502 has the following functions implemented:

Allocate system memory function:	allocate_memory(size)
Memory read function:			memory_read(address)
Memory write function:			write_memory(address,data)
Maskable Interrupt function:		IRQ(cycles)
Non Maskable Interrupt function:	NMI(cycles)
Reset CPU registers function:		CPU_reset()
Execute instruction function:		CPU_execute(cycles)


***************
*** Credits ***
***************

- Daniel Boris for getting me started with his "how to write an emulator" document.
- RTK and CricketNE for the 6502 Instruction Summary.
- And all the people i forgot to mention.


Copyright (c) 2005, Joey Loman <joey@lamenes.org> - http://www.lamenes.org
